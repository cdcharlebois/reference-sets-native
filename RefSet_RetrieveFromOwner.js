// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
const getMxObjectsByGuidList = (guids) => {
	return new Promise((resolve) => {
		mx.data.get({
			guids: guids,
			callback: function (objs) {
				resolve(objs);
			}
		});
	})
}
// END EXTRA CODE

/**
 * Retrieves a list of objects across a reference set from the owner object.
 * @param {MxObject} ownerObject - This object should own (have the dot) for the reference set
 * @param {string} referenceName - The name of the reference set, including the module. i.e. MyFirstModule.Person_Pets
 * @param {string} referenceEntity
 * @returns {Promise.<MxObject[]>}
 */
export async function RefSet_RetrieveFromOwner(ownerObject, referenceName, referenceEntity) {
	// BEGIN USER CODE
	if (ownerObject.isObjectReferenceSet(referenceName) && ownerObject.getSelectorEntity(referenceName) === referenceEntity) {
		const referenceGuids = ownerObject.getReferences(referenceName);
		return await getMxObjectsByGuidList(referenceGuids);
	}
	else {
		throw new Error(`The reference set ${referenceName} was not found or does not point to ${referenceEntity}`)
	}
	// END USER CODE
}
