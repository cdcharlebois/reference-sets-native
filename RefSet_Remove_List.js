// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {MxObject} ownerObject - The object with the reference set you want to change
 * @param {MxObject[]} referenceObject - The list of objects to remove from the reference set, if found
 * @param {string} referenceSetName - Include the module name
 * @returns {Promise.<void>}
 */
export async function RefSet_Remove_List(ownerObject, referenceObject, referenceSetName) {
	// BEGIN USER CODE
	// add
	if (
		ownerObject.isObjectReferenceSet(referenceSetName) &&
		ownerObject.getSelectorEntity(referenceSetName) === referenceObject[0].getEntity()
	) {
		ownerObject.removeReferences(referenceSetName, referenceObject.map(obj => obj.getGuid()));
	} else {
		throw new Error(
			`The reference set ${referenceSetName} was not found or does not point to ${referenceObject[0].getEntity()}.`
		);
	}
	// END USER CODE
}
